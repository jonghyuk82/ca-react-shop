{"version":3,"file":"static/js/970.d0d1777f.chunk.js","mappings":"iUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WAEzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBAAKN,GAAK,IACjDR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAM1C,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CAEA,OAAOA,CACT,I,oEC5BMI,EAAsBpB,EAAAA,YAAiB,WAQ1CC,GAAQ,IAPToB,EAAE,EAAFA,GACAnB,EAAQ,EAARA,SACAO,EAAO,EAAPA,QACAD,EAAI,EAAJA,KACAc,EAAM,EAANA,OACAnB,EAAS,EAATA,UACGQ,GAAK,YAEFY,GAASV,EAAAA,EAAAA,IAAmBX,EAAU,OAC5C,GAEKsB,EAAAA,EAAAA,KAAe,QAClBC,QAASJ,GACNV,IACH,eALKe,EAAW,KAMZC,EALG,KAAPF,QAMF,OAAoBR,EAAAA,EAAAA,KAAKU,GAAW,0BAAKD,GACpCf,GAAK,IACRV,IAAKA,EACLE,UAAWY,IAAWZ,EAAWoB,EAAQD,GAAU,SAAUb,GAAW,GAAJ,OAAOc,EAAM,YAAId,GAAWD,GAAQ,GAAJ,OAAOe,EAAM,YAAIf,GAAQG,EAAMiB,MAAQjB,EAAMkB,UAAY,cAEjK,IACAT,EAAOU,YAAc,SACrBV,EAAOW,aA7Bc,CACnBtB,QAAS,UACTa,QAAQ,EACRO,UAAU,GA2BZ,Q,8BCuFA,MAxGA,WAUE,IAAIG,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxCG,GAAOF,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAME,QAAQ,IAG5CC,GAAWC,EAAAA,EAAAA,MAGf,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAKnC,OALU,KAAU,MAMlB,4BAUE,0BACGP,EAAKQ,KAAI,IAAGR,EAAKS,IAAG,cASvB,UAAC,EAAK,CAACrC,SAAO,EAACC,UAAQ,EAACE,OAAK,aAC3B,4BACE,2BACE,+BACA,kCACA,iCACA,yCAGJ,2BAkBG4B,EAAKO,KAAI,SAACC,EAAGC,GAAC,OACb,2BACE,wBAAKA,EAAI,KAET,wBAAKT,EAAKS,GAAGJ,QACb,wBAAKL,EAAKS,GAAGC,SACb,2BACE,SAAC,EAAM,CACLpC,QAAQ,UACRqC,QAAS,WAEPT,GAASU,EAAAA,EAAAA,IAASZ,EAAKS,GAAGI,IAC5B,EAAE,eAGM,KACV,SAAC,EAAM,CACLvC,QAAQ,SACRqC,QAAS,WAEPT,GAASY,EAAAA,EAAAA,IAAed,EAAKS,GAAGI,IAClC,EAAE,yBApBCJ,EAyBJ,WAMjB,C","sources":["../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Button.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React, { memo, useMemo, useState } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeAge } from \"./../store/userSlice\";\r\nimport { addCount, removeFromCart } from \"./../store\";\r\n\r\n// using Memo : prevent re-rendering\r\n// props가 변경될때 re-rendering도게 할수 있음\r\nlet Child = memo(function () {\r\n  console.log(\"rendering\");\r\n  return <div>child</div>;\r\n});\r\n\r\n// useMemo\r\n// function func(){\r\n//   return 반복문 10억번 돌린결과\r\n// }\r\n\r\nfunction Cart() {\r\n  // using redux\r\n  /* let a = useSelector((state) => {\r\n    return state.user;\r\n  });\r\n  or */\r\n  //   let a = useSelector((state) => state.user);\r\n\r\n  // get redux data\r\n  //   let state = useSelector((state) => state);\r\n  let user = useSelector((state) => state.user);\r\n  let item = useSelector((state) => state.cartItem);\r\n\r\n  // using redux data update\r\n  let dispatch = useDispatch();\r\n\r\n  // using Memo\r\n  let [count, setCount] = useState(0);\r\n\r\n  //useMemo: useEffect와 동일하지만 실행 시점이 html과 동일한 시점에 실행됨\r\n  // let result = useMemo(() => {return func()}, [state])\r\n\r\n  return (\r\n    <div>\r\n      {/* using Memo */}\r\n      {/* <Child count={count}></Child>\r\n      <button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        +\r\n      </button> */}\r\n      <h6>\r\n        {user.name} {user.age}'s Cart\r\n      </h6>\r\n      {/* <button\r\n        onClick={() => {\r\n          dispatch(changeAge(10));\r\n        }}\r\n      >\r\n        Button\r\n      </button> */}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>QTY</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {state.cartItem.map((a, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{state.cartItem[i].name}</td>\r\n              <td>{state.cartItem[i].count}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    dispatch(changeName());\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </td>\r\n              <td>{state.user.name}</td>\r\n            </tr>\r\n          ))} */}\r\n          {item.map((a, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              {/* <td>{item[i].id}</td> */}\r\n              <td>{item[i].name}</td>\r\n              <td>{item[i].count}</td>\r\n              <td>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    // dispatch(changeName());\r\n                    dispatch(addCount(item[i].id));\r\n                  }}\r\n                >\r\n                  +\r\n                </Button>{\" \"}\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => {\r\n                    // dispatch(changeName());\r\n                    dispatch(removeFromCart(item[i].id));\r\n                  }}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Button","as","active","prefix","useButtonProps","tagName","buttonProps","Component","href","disabled","displayName","defaultProps","user","useSelector","state","item","cartItem","dispatch","useDispatch","useState","name","age","map","a","i","count","onClick","addCount","id","removeFromCart"],"sourceRoot":""}